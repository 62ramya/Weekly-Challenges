#!/usr/bin/env node

/*jshint laxcomma:true */

var //lazy not found??
   lazy = require( "lazy" )
  , mandolin_helper = require( "./mandolin-helper" )
  , mandolin   = new mandolin_helper()
  , fs   = require( "fs" )
  , src  = "/Users/fritz/Desktop/export_sed.xml"
  , trgt = "/Users/fritz/Documents/CAPTAIN_MANDOLIN/MUSIC/FILLERS/WORLD/"
  , bash_file = "/Users/fritz/bash_file.sh"
  , files = []

  //will be overwritten
  , max_padding = -1

  //not random as such, but the array is randomly shuffled, so the end
  //result is the same
  , fnRandomName = function randomName( seed ){
      return ( "0000000000" + ( seed + 1 ) ).substr( max_padding );
    }

  , fnQuote = function quote( string ){
      return "\"" + string + "\"";
    }
  ;

// DOESN'T WORK - lazy not found
// new lazy( fs.createReadStream( src ) )
//     .lines
//     .forEach(function(line){
//         console.log(line.toString());
//     }
// );

files = fs.readFileSync(src).toString().split("\n");
files = mandolin.shuffle( files );
//note that Math.log is really Math.ln, there is no log10
max_padding = -Math.floor( Math.log( files.length ) / Math.LN10 ) - 1;
fs.writeFileSync( bash_file, "rm -rf " + trgt +
                             " && mkdir -p " + trgt + "\n" );

files.forEach( function( file, n ){
  var unescaped = ""
    , file_suffix = ""
    , file_name = ""
    , bash_cmd = ""
    ;

  unescaped = mandolin.replaceOSXDecomposedChars( file );
  unescaped = unescape( unescaped ).replace( /"/g, "\"" );
  file_suffix = unescaped.split( "." ).pop().toLowerCase();
  file_name = unescaped.split( "/" ).pop();

  if( unescaped !== "" ){
    bash_cmd = "".concat( "cp ",
                          fnQuote( unescaped ),
                          " ",
                      //    fnQuote( trgt + fnRandomName( n ) + "." + file_suffix ),
                          fnQuote( trgt + file_name ),
                          "\n");
    fs.appendFileSync( bash_file, bash_cmd );
  }
});

process.exit(0);

